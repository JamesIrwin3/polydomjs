{"version":3,"file":"src_components_index_ts.e201f9e4ba5556ab657a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://polydomjs/./src/components/Polygon/Polygon.methods.ts"],"sourcesContent":["import { ReactElement, RefObject, useEffect, useRef } from \"react\";\nimport { ngon, translate, Cubic, multiply, add, divide, XY } from \"../../geometry\";\nimport { IconType } from 'react-icons';\n\nexport const useNgon = (sides: number, scale:number, rotation: number, cornerRadius: number, strokeWidth: number): [number[][], Cubic, number] => {\n\tconst [ssw, scr] = multiply([strokeWidth, cornerRadius], scale);\n\tconst radius = scale/2;\n\tconst [cpts, vb] = ngon(sides, radius - (ssw/2), rotation, scr, [0, 0]);\n\tconst hsw = ssw/2;\n\tconst bvb: Cubic = add(vb, [-hsw, -hsw, ssw, ssw]) as Cubic;\n\t//const points = translate(cpts, [-bvb[0], -bvb[1], -bvb[0], -bvb[1]])\n\treturn [cpts, [0, 0, bvb[2], bvb[3]], ssw];\n}\n\nexport const useIcon = (icon: IconType, scale:number, inCircleRadius: number, offset: XY): RefObject<SVGGElement> => {\n\tconst ref = useRef(null);\n\tuseEffect(()=>{\n\t\tconst g = ref.current! as SVGGElement\n\t\tArray.from(g.children).forEach(elem => {\n\t\t\tif(elem.tagName !== 'svg') return;\n\t\t\telem.removeAttribute('width');\n\t\t\telem.removeAttribute('height');\n\t\t\tconst vb = (elem.getAttribute('viewBox') ?? '0 0 0 0').split(' ').map(parseFloat);\n\t\t\tconst maxDim = Math.max(...vb);\n\t\t\tconst scale = (inCircleRadius * 2);\n\t\t\tconst newDim: XY = multiply([vb[2], vb[3]], scale) as XY;\n\t\t\tg.setAttribute('transform', `scale(${scale}) translate(${offset.join(' ')})`)\n\t\t\tconsole.log(vb, inCircleRadius, maxDim, scale, newDim);\n\t\t});\n\t}, [icon]);\n\treturn ref;\n}"],"names":[],"sourceRoot":""}