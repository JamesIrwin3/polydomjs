{"version":3,"file":"stories-Polygon-stories.319a5bcd68d1dc128d0c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AA7BA","sources":["webpack://polydomjs/./src/components/Polygon/Polygon.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef } from 'react';\nimport { DOMElement, PolygonProps } from './Polygon.types';\nimport { draw } from '../../svg/svg.methods';\nimport { ngon, rad } from '../../geometry';\nimport { FaBeer } from 'react-icons/fa';\n\nexport const Polygon: FC<PolygonProps> = ({\n\tsides = 6,\n\trotation = 0,\n\tscale = 1,\n\tcornerRadius = 0,\n\tfillColor = '#000',\n\tstrokeColor = '#000',\n\tlineWidth = 0.1,\n\tchildren = <FaBeer/>\n}) => {\n\tconst [points, viewBox] = ngon(sides, scale, rad(rotation), cornerRadius, [0, 0]);\n\tconst scaledLineWidth = lineWidth * scale;\n\tconst hl = scaledLineWidth > 0 ? scaledLineWidth/2:0;\n\tconst newViewBox = [viewBox[0]-hl, viewBox[1]-hl, viewBox[2]+scaledLineWidth, viewBox[3]+scaledLineWidth];\n\tconst ref = useRef(null);\n\tuseEffect(() => {\n\t\tconst knownPath = ref.current! as SVGPathElement;\n\t\tif(!children) return;\n\t\tconst nextChild = knownPath.nextSibling as DOMElement;\n\t\tconsole.log(nextChild);\n\t\tif(nextChild.tagName === 'svg'){\n\t\t\tconst childViewBox = nextChild.getAttribute('viewBox')?.split(' ').map(v=>parseFloat(v))!;\n\t\t\tconsole.log(\"do something with this\", childViewBox);\n\t\t}\n\t},[])\n\treturn (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={newViewBox.join(' ')} width=\"100px\" height=\"100px\">\n\t\t<path d={draw(points)} ref={ref} fill={fillColor} stroke={strokeColor} strokeWidth={scaledLineWidth}/>\n\t\t{children}\n\t</svg>)\n};"],"names":[],"sourceRoot":""}