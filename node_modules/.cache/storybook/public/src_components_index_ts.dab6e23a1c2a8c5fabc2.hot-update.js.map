{"version":3,"file":"src_components_index_ts.dab6e23a1c2a8c5fabc2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAxBA","sources":["webpack://polydomjs/./src/components/Polygon/PolyImg.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef } from \"react\";\nimport { PolyImgProps } from \"./Polygon.types\";\nimport { Svg, Path } from \"../Svg\";\nimport { useNgon } from \"./Polygon.methods\";\nimport { rad } from \"../../geometry\";\n\nexport const PolyImg: FC<PolyImgProps> = ({\n\tsides = 6,\n\trotation = 0,\n\tscale = 1,\n\tcornerRadius = 0,\n\tstroke = 'currentColor',\n\tstrokeWidth = 0.1,\n\timage,\n\timageScaleFactor = 1\n}) => {\n\tconst [points, viewBox, scaledStrokeWidth] = useNgon(sides, scale, rad(rotation), cornerRadius, strokeWidth);\n\tconsole.log(viewBox);\n\treturn (<Svg \n\tviewBox={viewBox}\n\twidth='100%'\n\theight='100%'>\n\t\t<defs>\n\t\t\t<mask id=\"path-mask\">\n\t\t\t\t<Path {...{points, fill:'#fff', stroke: '#000', strokeWidth: scaledStrokeWidth}}/>\n\t\t\t</mask>\n\t\t</defs>\n\t\t<image width={viewBox[2]-strokeWidth} height={viewBox[3]-strokeWidth} xlinkHref={image} mask='url(#path-mask)' transform={`scale(${imageScaleFactor}) translate()`} preserveAspectRatio=\"xMidYMid slice\"/>\n\t\t<Path {...{points, fill:'transparent', stroke, strokeWidth:scaledStrokeWidth}}/>\n\t</Svg>)\n}"],"names":[],"sourceRoot":""}