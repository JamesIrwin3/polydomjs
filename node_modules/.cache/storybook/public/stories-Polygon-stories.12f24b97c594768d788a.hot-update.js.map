{"version":3,"file":"stories-Polygon-stories.12f24b97c594768d788a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;AAEA;AAEA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA","sources":["webpack://polydomjs/./src/components/Polygon/Polygon.tsx","webpack://polydomjs/./src/geometry/geometry.methods.ts","webpack://polydomjs/./src/svg/svg.methods.ts"],"sourcesContent":["import React, { FC } from 'react';\nimport { PolygonProps } from './Polygon.types';\nimport { draw } from '../../svg/svg.methods';\nimport { ngon } from '../../geometry/geometry.methods';\n\nexport const Polygon: FC<PolygonProps> = ({\n\tsides = 6\n}) => {\n\treturn (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox='-1 -1 2 2' width=\"100px\" height=\"100px\">\n\t\t<path d={draw(ngon(sides, 1, [0, 0]))} fill=\"#f00\"/>\n\t</svg>)\n}","import { XY } from \"./geometry.types\"\n\n/**\n * cast a ray from a particular point at a specified angle and distance. \n * @param angle \n * @param radius \n * @param center \n * @returns XY\n */\nexport const ray = (angle: number, radius: number, center: XY): XY => ([\n\tMath.cos(angle) * radius + center[0],\n\tMath.sin(angle) * radius + center[1]\n]);\n\n/**\n * Create the points to generate an ngon\n * @param sides \n * @param radius \n * @param center \n * @returns \n */\nexport const ngon = (sides: number, radius: number, center: XY): XY[] => {\n\tconst radian = 2*Math.PI/sides;\n\treturn new Array(sides).fill(0).map((_, i) => ray(radian * i, radius, center));\n}","/**\n * creats a paths draw string\n * @param param0 \n * @returns string\n */\nexport const draw = ([f, ...points]: number[][]): string => `M ${f.join(' ')}` + points.map( v => `${v.length == 2 ? 'L':'Q'} ${v.join(' ')}`).join(' ') + ' Z';"],"names":[],"sourceRoot":""}