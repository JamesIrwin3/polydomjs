"use strict";
self["webpackHotUpdatepolydomjs"]("stories-Polygon-stories",{

/***/ "./src/components/Svg/Path.tsx":
/*!*************************************!*\
  !*** ./src/components/Svg/Path.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Path: () => (/* binding */ Path)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Svg_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Svg.methods */ "./src/components/Svg/Svg.methods.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const Path = _ref => {
  let {
    points = [],
    fill,
    stroke,
    strokeWidth
  } = _ref;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
    d: (0,_Svg_methods__WEBPACK_IMPORTED_MODULE_2__.draw)(points),
    fill,
    stroke,
    strokeWidth
  });
};
Path.displayName = "Path";
try {
    // @ts-ignore
    Path.displayName = "Path";
    // @ts-ignore
    Path.__docgenInfo = { "description": "", "displayName": "Path", "props": { "points": { "defaultValue": { value: "[]" }, "description": "Renders based on points rather then string. \n2 coordinate points provided will result in a line (or movement if first point)\n4 coordinate points provided will result in a cubic curve", "name": "points", "required": false, "type": { "name": "number[][]" } }, "fill": { "defaultValue": null, "description": "The fill color", "name": "fill", "required": false, "type": { "name": "string" } }, "stroke": { "defaultValue": null, "description": "The stroke color", "name": "stroke", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "The stroke width", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "scale": { "defaultValue": null, "description": "scale will allow path to adjust border size", "name": "scale", "required": false, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Svg/Path.tsx#Path"] = { docgenInfo: Path.__docgenInfo, name: "Path", path: "src/components/Svg/Path.tsx#Path" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=stories-Polygon-stories.a1081be6109d3b9df62e.hot-update.js.map