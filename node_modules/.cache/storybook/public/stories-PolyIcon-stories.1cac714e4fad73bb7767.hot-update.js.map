{"version":3,"file":"stories-PolyIcon-stories.1cac714e4fad73bb7767.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAWA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AA9BA","sources":["webpack://polydomjs/./src/components/Polygon/PolyIcon.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { PolyIconProps } from \"./Polygon.types\";\nimport { Svg, Path } from \"../Svg\";\nimport { useNgon } from \"./Polygon.methods\";\nimport { rad } from \"../../geometry\";\n\nexport const PolyIcon: FC<PolyIconProps> = ({\n\tsides = 6,\n\trotation = 0,\n\tscale = 1,\n\tcornerRadius = 0,\n\tfill = '#000',\n\tstroke = 'currentColor',\n\tstrokeWidth = 0.1,\n\ticon,\n\ticonScaleFactor = 0.8,\n\ticonPosition = [0.2, 0.1]\n}) => {\n\tconst [points, viewBox, scaledStrokeWidth] = useNgon(sides, scale, rad(rotation), cornerRadius, strokeWidth);\n\tconst ref = useRef(null);\n\tuseEffect(()=>{\n\t\tconst elems = (ref.current! as SVGGElement).children\n\t\tif (elems.length === 0 || elems[0].tagName !== 'svg') return; //do nothing because I wasnt trained for this\n\t\tconst elem = elems[0];\n\t\telem.removeAttribute('width');\n\t\telem.removeAttribute('height');\n\t}, [icon]);\n\treturn (<Svg \n\tviewBox={viewBox}\n\twidth='1rem'\n\theight='1rem'>\n\t\t<Path {...{points, fill, stroke, strokeWidth:scaledStrokeWidth}}/>\n\t\t<g ref={ref} transform={`scale(${iconScaleFactor}) translate(${iconPosition.join(', ')})`}>\n\t\t\t{icon}\n\t\t</g>\n\t</Svg>)\n}"],"names":[],"sourceRoot":""}