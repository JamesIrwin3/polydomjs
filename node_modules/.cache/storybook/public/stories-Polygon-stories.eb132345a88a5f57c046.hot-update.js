"use strict";
self["webpackHotUpdatepolydomjs"]("stories-Polygon-stories",{

/***/ "./src/components/PolyIcon/PolyIcon.tsx":
/*!**********************************************!*\
  !*** ./src/components/PolyIcon/PolyIcon.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PolyIcon: () => (/* binding */ PolyIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Polygon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Polygon */ "./src/components/Polygon/index.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const PolyIcon = _ref => {
  let {
    icon,
    ...polygonProps
  } = _ref;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    //if child is not an svg halt
    const g = ref.current;
    console.log(g.children);
  }, []);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Polygon__WEBPACK_IMPORTED_MODULE_1__.Polygon, {
    ...polygonProps,
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("g", {
      ref: ref,
      x: 0,
      y: 0,
      children: icon
    })
  });
};
PolyIcon.displayName = "PolyIcon";
try {
    // @ts-ignore
    PolyIcon.displayName = "PolyIcon";
    // @ts-ignore
    PolyIcon.__docgenInfo = { "description": "", "displayName": "PolyIcon", "props": { "icon": { "defaultValue": null, "description": "Accepts a react element however this is only been tested with react-icons and font asesome icons.", "name": "icon", "required": true, "type": { "name": "ReactElement<any, string | JSXElementConstructor<any>>" } }, "sides": { "defaultValue": null, "description": "The number of sides the polygon has", "name": "sides", "required": false, "type": { "name": "number" } }, "rotation": { "defaultValue": null, "description": "the rotation angle in degrees", "name": "rotation", "required": false, "type": { "name": "number" } }, "scale": { "defaultValue": null, "description": "Scaling factor", "name": "scale", "required": false, "type": { "name": "number" } }, "cornerRadius": { "defaultValue": null, "description": "The corner radius applied to rounding each corner.", "name": "cornerRadius", "required": false, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "The fill color", "name": "fill", "required": false, "type": { "name": "string" } }, "stroke": { "defaultValue": null, "description": "The stroke color", "name": "stroke", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "The stroke line width", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "children": { "defaultValue": null, "description": "This element does not receive any special treatment. If the element is intended to hold content PolyDiv or PolyIcon may be more suitable components.", "name": "children", "required": false, "type": { "name": "ReactNode" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/PolyIcon/PolyIcon.tsx#PolyIcon"] = { docgenInfo: PolyIcon.__docgenInfo, name: "PolyIcon", path: "src/components/PolyIcon/PolyIcon.tsx#PolyIcon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=stories-Polygon-stories.eb132345a88a5f57c046.hot-update.js.map