"use strict";
self["webpackHotUpdatepolydomjs"]("stories-Polygon-stories",{

/***/ "./src/components/Polygon/PolyImg.tsx":
/*!********************************************!*\
  !*** ./src/components/Polygon/PolyImg.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PolyImg: () => (/* binding */ PolyImg)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Svg */ "./src/components/Svg/index.ts");
/* harmony import */ var _Polygon_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Polygon.methods */ "./src/components/Polygon/Polygon.methods.ts");
/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../geometry */ "./src/geometry/index.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");






const PolyImg = _ref => {
  let {
    sides = 6,
    rotation = 0,
    scale = 1,
    cornerRadius = 0,
    fill = '#000',
    stroke = 'currentColor',
    strokeWidth = 0.1,
    image,
    imageScaleFactor = 1
  } = _ref;
  const [points, viewBox, scaledStrokeWidth, setScale] = (0,_Polygon_methods__WEBPACK_IMPORTED_MODULE_2__.useNgon)(sides, scale, (0,_geometry__WEBPACK_IMPORTED_MODULE_3__.rad)(rotation), cornerRadius, strokeWidth);
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  /*
  useEffect(()=>{
  	const elems = (ref.current! as SVGGElement).children
  	if (elems.length === 0 || elems[0].tagName !== 'svg') return; //do nothing because I wasnt trained for this
  	const elem = elems[0];
  	elem.removeAttribute('width');
  	elem.removeAttribute('height');
  	const vb = (elem.getAttribute('viewBox') ?? '0 0 0 0').split(' ').map(v=>parseFloat(v));
  })*/
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_Svg__WEBPACK_IMPORTED_MODULE_1__.Svg, {
    viewBox: viewBox,
    width: "100%",
    height: "100%",
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("defs", {
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("mask", {
        id: "path-mask",
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Svg__WEBPACK_IMPORTED_MODULE_1__.Path, {
          points,
          fill: '#fff',
          stroke: '#000',
          strokeWidth: scaledStrokeWidth
        })
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("image", {
      x: "0",
      y: "0",
      width: viewBox[2],
      height: viewBox[3],
      xlinkHref: image,
      mask: "url(#path-mask)",
      transform: `scale(${imageScaleFactor})`
    })]
  });
};
PolyImg.displayName = "PolyImg";
try {
    // @ts-ignore
    PolyImg.displayName = "PolyImg";
    // @ts-ignore
    PolyImg.__docgenInfo = { "description": "", "displayName": "PolyImg", "props": { "image": { "defaultValue": null, "description": "The image element to be provided", "name": "image", "required": true, "type": { "name": "string" } }, "imageScaleFactor": { "defaultValue": { value: "1" }, "description": "The scale factor to be used on the image. Warning values greater then 1 may cause unexpected results. If value is greater then 1 it should be expected that the image quality will be reduced.\nIt should also be noted because the image is within an SVG if the svg is scaled to large image quality will also be affected.", "name": "imageScaleFactor", "required": false, "type": { "name": "number" } }, "sides": { "defaultValue": { value: "6" }, "description": "The number of sides the polygon has", "name": "sides", "required": false, "type": { "name": "number" } }, "rotation": { "defaultValue": { value: "0" }, "description": "the rotation angle in degrees", "name": "rotation", "required": false, "type": { "name": "number" } }, "scale": { "defaultValue": { value: "1" }, "description": "Scaling factor", "name": "scale", "required": false, "type": { "name": "number" } }, "cornerRadius": { "defaultValue": { value: "0" }, "description": "The corner radius applied to rounding each corner.", "name": "cornerRadius", "required": false, "type": { "name": "number" } }, "fill": { "defaultValue": { value: "#000" }, "description": "The fill color", "name": "fill", "required": false, "type": { "name": "string" } }, "stroke": { "defaultValue": { value: "currentColor" }, "description": "The stroke color", "name": "stroke", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": { value: "0.1" }, "description": "The stroke line width", "name": "strokeWidth", "required": false, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Polygon/PolyImg.tsx#PolyImg"] = { docgenInfo: PolyImg.__docgenInfo, name: "PolyImg", path: "src/components/Polygon/PolyImg.tsx#PolyImg" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=stories-Polygon-stories.3a5a10c8be6952b32bdd.hot-update.js.map