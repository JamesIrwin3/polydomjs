{"version":3,"file":"stories-Polygon-stories.2e2529770d3b12b9e966.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://polydomjs/./src/components/Polygon/Polygon.methods.ts"],"sourcesContent":["import { ReactElement, RefObject, useEffect, useRef } from \"react\";\nimport { ngon, translate, Cubic, multiply, add, divide } from \"../../geometry\";\nimport { IconType } from 'react-icons';\n\nexport const useNgon = (sides: number, scale:number, rotation: number, cornerRadius: number, strokeWidth: number): [number[][], Cubic, number] => {\n\tconst [ssw, scr] = multiply([strokeWidth, cornerRadius], scale);\n\tconst radius = scale/2;\n\tconst [cpts, vb] = ngon(sides, radius, rotation, scr, [0, 0]);\n\tconst hsw = ssw/2;\n\tconst bvb: Cubic = add(vb, [-hsw, -hsw, ssw, ssw]) as Cubic;\n\tconst points = translate(cpts, [-bvb[0], -bvb[1], -bvb[0], -bvb[1]])\n\treturn [points, [0, 0, bvb[2], bvb[3]], ssw];\n}\n\nexport const useIcon = (icon: IconType, scale:number): RefObject<SVGGElement> => {\n\tconst ref = useRef(null);\n\tuseEffect(()=>{\n\t\tconst g = ref.current! as SVGGElement\n\t\tif(g.children.length === 0 || g.children[0].tagName !== 'svg') return;//do nothing because I wasnt trained for this\n\t\tconst elems = (ref.current! as SVGGElement).children\n\t\tconst elem = elems[0];\n\t\telem.removeAttribute('width');\n\t\telem.removeAttribute('height');\n\t\tconst vb = multiply((elem.getAttribute('viewBox') ?? '0 0 0 0').split(' ').map(parseFloat), scale);\n\t\tconst mv = Math.max(...vb);\n\t\tconst nvb = divide(vb, mv);\n\t\tconst offset = (1-scale)/2;\n\t\t\n\t\tconst mx = offset;\n\t\tconst my = offset;\n\t\tg.setAttribute('transform',`scale(${scale}) translate(${mx}, ${my})`);\n\t\tconsole.log(vb, mv, nvb);\n\t}, [icon]);\n\treturn ref;\n}"],"names":[],"sourceRoot":""}