{"version":3,"file":"stories-Polygon-stories.548407ddb876843576c3.hot-update.js","mappings":";;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://polydomjs/./src/geometry/geometry.methods.ts"],"sourcesContent":["import { XY } from \"./geometry.types\"\n\n/**\n * cast a ray from a particular point at a specified angle and distance. \n * @param angle \n * @param radius \n * @param center \n * @returns XY\n */\nexport const ray = (angle: number, radius: number, center: XY): XY => ([\n\tMath.cos(angle) * radius + center[0],\n\tMath.sin(angle) * radius + center[1]\n]);\n\n/**\n * Create the points to generate an ngon\n * @param sides \n * @param radius \n * @param center \n * @returns \n */\nexport const ngon = (sides: number, radius: number, rotation: number, center: XY): XY[] => {\n\tconst radian = 2*Math.PI/sides;\n\treturn new Array(sides).fill(0).map((_, i) => ray(radian * i, radius, center));\n}"],"names":[],"sourceRoot":""}