{"version":3,"file":"stories-Polygon-stories.350203048e8d8830d313.hot-update.js","mappings":";;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://polydomjs/./src/components/Polygon/Polygon.methods.ts"],"sourcesContent":["import { ngon, translate, Cubic, multiply, add, XY } from \"../../geometry\";\n\nexport const useNgon = (sides: number, scale:number, rotation: number, cornerRadius: number, strokeWidth: number): [number[][], Cubic, number] => {\n\tconst ssw = strokeWidth * scale;\n\tconst scr = cornerRadius * scale;\n\t\n\tconst radius = scale/2;\n\tconst [cpts, vb] = ngon(sides, radius, rotation, scr, [0, 0]);\n\tconst hsw = ssw/2;\n\tconst bvb: Cubic = add(vb, [-hsw, -hsw, ssw, ssw]) as Cubic;\n\tconst tvp: XY = [-bvb[0], -bvb[1]] as XY;\n\tconst points = translate(cpts, [...tvp, ...tvp])\n\tconsole.log(`Generating a polygon with the following dimensions\nsides: ........... ${sides}\nscale: ........... ${scale}\nstrokeWidth: ..... ${strokeWidth}\nscaledStrokeWidth: ${ssw}\nbounds: .......... ${bvb}\ntranslationParams: ${tvp}\n\n\t`);\n\treturn [cpts, viewBox, ssw];\n}"],"names":[],"sourceRoot":""}