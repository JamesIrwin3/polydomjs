"use strict";
self["webpackHotUpdatepolydomjs"]("stories-PolyImg-stories",{

/***/ "./src/components/Polygon/PolyIcon.tsx":
/*!*********************************************!*\
  !*** ./src/components/Polygon/PolyIcon.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PolyIcon: () => (/* binding */ PolyIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Svg */ "./src/components/Svg/index.ts");
/* harmony import */ var _Polygon_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Polygon.methods */ "./src/components/Polygon/Polygon.methods.ts");
/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../geometry */ "./src/geometry/index.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");






const PolyIcon = _ref => {
  let {
    sides = 6,
    rotation = 0,
    scale = 1,
    cornerRadius = 0,
    fill = '#000',
    stroke = 'currentColor',
    strokeWidth = 0.1,
    icon,
    iconScaleFactor = 0.8,
    iconPosition = [0.2, 0.1]
  } = _ref;
  const [points, viewBox, scaledStrokeWidth] = (0,_Polygon_methods__WEBPACK_IMPORTED_MODULE_2__.useNgon)(sides, scale, (0,_geometry__WEBPACK_IMPORTED_MODULE_3__.rad)(rotation), cornerRadius, strokeWidth);
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const elems = ref.current.children;
    if (elems.length === 0 || elems[0].tagName !== 'svg') return; //do nothing because I wasnt trained for this
    const elem = elems[0];
    elem.removeAttribute('width');
    elem.removeAttribute('height');
  }, []);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_Svg__WEBPACK_IMPORTED_MODULE_1__.Svg, {
    viewBox: viewBox,
    width: "1rem",
    height: "1rem",
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Svg__WEBPACK_IMPORTED_MODULE_1__.Path, {
      points,
      fill,
      stroke,
      strokeWidth: scaledStrokeWidth
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("g", {
      ref: ref,
      transform: `scale(${iconScaleFactor}) translate(${iconPosition.join(', ')})`,
      children: icon
    })]
  });
};
PolyIcon.displayName = "PolyIcon";
try {
    // @ts-ignore
    PolyIcon.displayName = "PolyIcon";
    // @ts-ignore
    PolyIcon.__docgenInfo = { "description": "", "displayName": "PolyIcon", "props": { "icon": { "defaultValue": null, "description": "Accepts a react element however this is only been tested with react-icons and font asesome icons.", "name": "icon", "required": true, "type": { "name": "ReactElement<any, string | JSXElementConstructor<any>>" } }, "iconScaleFactor": { "defaultValue": { value: "0.8" }, "description": "This number should reflect the change in size from its original dimension. because this is a vector value it should be less then 1. values greater then 1 may have unexpected results. \ndefault is 0.8", "name": "iconScaleFactor", "required": false, "type": { "name": "number" } }, "iconPosition": { "defaultValue": { value: "[0.2, 0.1]" }, "description": "Icon position is used to fine tune the icons location within the polygon. this will be usefull primarily with asymetric icons\nthe default is [0.2, 0.1]", "name": "iconPosition", "required": false, "type": { "name": "XY" } }, "sides": { "defaultValue": { value: "6" }, "description": "The number of sides the polygon has", "name": "sides", "required": false, "type": { "name": "number" } }, "rotation": { "defaultValue": { value: "0" }, "description": "the rotation angle in degrees", "name": "rotation", "required": false, "type": { "name": "number" } }, "scale": { "defaultValue": { value: "1" }, "description": "Scaling factor", "name": "scale", "required": false, "type": { "name": "number" } }, "cornerRadius": { "defaultValue": { value: "0" }, "description": "The corner radius applied to rounding each corner.", "name": "cornerRadius", "required": false, "type": { "name": "number" } }, "fill": { "defaultValue": { value: "#000" }, "description": "The fill color", "name": "fill", "required": false, "type": { "name": "string" } }, "stroke": { "defaultValue": { value: "currentColor" }, "description": "The stroke color", "name": "stroke", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": { value: "0.1" }, "description": "The stroke line width", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "width": { "defaultValue": null, "description": "The widths of the svg defaults to 100%", "name": "width", "required": false, "type": { "name": "string" } }, "height": { "defaultValue": null, "description": "The height of the svg defaults to 100%", "name": "height", "required": false, "type": { "name": "string" } }, "maskID": { "defaultValue": null, "description": "The id to be provided to the polygon mask.\nIf this is not provided a mask will not be made", "name": "maskID", "required": false, "type": { "name": "string" } }, "children": { "defaultValue": null, "description": "The children to be provided if no maskID these will be added after the polygon\nif a mask id is provided the stroke will be rendered after the children to ensure proper order", "name": "children", "required": false, "type": { "name": "ReactNode" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Polygon/PolyIcon.tsx#PolyIcon"] = { docgenInfo: PolyIcon.__docgenInfo, name: "PolyIcon", path: "src/components/Polygon/PolyIcon.tsx#PolyIcon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=stories-PolyImg-stories.8e49909c602c35440c8f.hot-update.js.map